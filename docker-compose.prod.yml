version: '3'
services:
  ques-service:
    build:
      context: . 
      dockerfile: ./dockerfiles/dockerfile.ques-service
    ports:
      - "8080:8080" # map host port:8080 to container's port:8080
    environment:
      MONGOURL: ${MONGOURL}
    networks:
      - peerprep-network

  collaboration-service:
    build:
      context: .
      dockerfile: ./dockerfiles/dockerfile.collaboration-service
    ports:
      - "4000:4000"
    networks:
      - peerprep-network
    
  history-service:
    build:
      context: .
      dockerfile: ./dockerfiles/dockerfile.history-service
    ports:
      - "7000:7000"
    environment:
      MONGOURL: ${MONGOURL}
    networks:
      - peerprep-network
  
  user-db:
    image: "postgres:13"
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: localuser
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: peerprep
    volumes:
      - user-data:/var/lib/postgresql/data
    networks:
      - peerprep-network

  user-service:
    build:
      context: .
      dockerfile: ./dockerfiles/dockerfile.user-service
    ports:
      - "5000:5000" # map host port:5000 to container's port:5000
    environment:
      MONGOURL: ${MONGOURL}
      PG_USER: localuser
      PG_PASSWORD: 12345
      PG_DB: peerprep
      PG_HOST: user-db
    depends_on: 
      - user-db
    networks:
      - peerprep-network

  rabbitmq:
    image: "rabbitmq:3-management-alpine"
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "nc", "-z", "rabbitmq", "5672" ]
      interval: 5s
      timeout: 30s
      retries: 5
    networks:
      - peerprep-network

  matching-service:
    build:
      context: .
      dockerfile: ./dockerfiles/dockerfile.matching-service
    ports:
      - "3000:3000"
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      QUESTIONS_SERVICE_URL: "http://ques-service:8080/questions"
      COLLABORATION_SERVICE_URL: "http://collaboration-service:4000/rooms"
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure
    networks:
      - peerprep-network

  frontend:
    build:
      context: .
      dockerfile: ./dockerfiles/dockerfile.frontend
    ports:
      - "5173:5173"
    environment:
      VITE_FRONTEND_URL: "http://g15-peerprep.ap-southeast-1.elasticbeanstalk.com"
      VITE_AUTH_SERVICE_URL: "/api/user-service/auth" 
      VITE_COLLABORATION_SERVICE_URL: "/api/collaboration-service/socket.io" 
      VITE_MATCHING_SERVICE_URL: "/api/matching-service/socket.io" 
      VITE_QUESTIONS_SERVICE_URL: "/api/ques-service/questions" 
      VITE_USERS_SERVICE_URL: "/api/user-service/users" 
      VITE_HISTORY_SERVICE_URL: "/api/history-service"
    depends_on:
      - user-service
      - matching-service
      - history-service
      - ques-service
      - collaboration-service
    networks:
      - peerprep-network

  proxy:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    restart: always
    ports:
      - "80:80"
    depends_on:
      - user-service
      - matching-service
      - history-service
      - ques-service
      - collaboration-service
      - frontend
    networks:
      - peerprep-network

volumes:
  user-data:

networks:
  peerprep-network:
    driver: bridge